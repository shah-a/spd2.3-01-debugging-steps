"""
Exercise 1
"""

# PART 1: Gather Information
# - Expected output is 4. Actual program results in error.
# - Traceback says loop index goes out of range on this line:
#   - diff = abs(list_of_nums[i] - list_of_nums[i+1])
# - The loop range is generated by taking the length of the list.
#   Then, the difference by adding 1 to the index of the latter operand.
#   This will result in exceeding the index limit list on the last iteration.

# PART 2: State Assumptions
# - First, we assume the possibility of all numbers in the list being equal. To accommodate this, we set largest_diff to 0.
# - Next, we loop over the list taking absolute differences, assuming that the operands are consecutive numbers in the list
#   - We assume that the comparison begins with the first two numbers in the list and ends with the last two numbers in the list
#   - If we print this out, we see that this assumption is incorrect. In the last iteration, the first operand is actually the
#     the last number of the list rather than the second last. This must be the source of the bug.

def find_largest_diff(list_of_nums):
    """Find the largest difference between *consecutive* numbers in a list."""
    largest_diff = 0
    for i in range(len(list_of_nums)):
        print(list_of_nums[i], ' and ')
        print(list_of_nums[i+1])
        diff = abs(list_of_nums[i] - list_of_nums[i+1])
        if diff > largest_diff:
            largest_diff = diff

    return largest_diff

if __name__ == '__main__':
    print('### Problem 1 ###')
    answer = find_largest_diff([5, 3, 1, 2, 6, 4])

    # This should print 4, as the largest diff between consecutive numbers is between 2 and 6
    print(answer)